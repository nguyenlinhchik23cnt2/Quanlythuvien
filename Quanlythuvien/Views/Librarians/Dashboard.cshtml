@using Quanlythuvien.Controllers
@model LibrarianDashboardViewModel

@{
    ViewData["Title"] = "Dashboard Thủ Thư";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet" />

<style>
    body {
        background-color: #f8f9fa;
        font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
    }

    h2 {
        text-align: center;
        margin-top: 30px;
        margin-bottom: 20px;
        color: #002b5c;
        font-weight: 700;
    }

    .stat-card {
        border-radius: 10px;
        padding: 20px;
        color: white;
        text-align: center;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }

        .stat-card:hover {
            transform: translateY(-5px);
        }

        .stat-card h5 {
            font-size: 1rem;
            margin-bottom: 10px;
        }

        .stat-card h2 {
            font-size: 2.5rem;
            margin: 0;
            color: white;
        }

    .bg-warning-custom {
        background: linear-gradient(135deg, #ffc107 0%, #ff9800 100%);
    }

    .bg-info-custom {
        background: linear-gradient(135deg, #17a2b8 0%, #0d6efd 100%);
    }

    .bg-danger-custom {
        background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);
    }

    .bg-success-custom {
        background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
    }

    .card {
        border-radius: 10px;
        box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);
        border: none;
    }

    .card-header {
        border-radius: 10px 10px 0 0 !important;
        font-weight: bold;
        padding: 15px 20px;
    }

    table {
        margin-bottom: 0;
    }

    th, td {
        padding: 12px;
        text-align: center;
        vertical-align: middle;
    }

    thead {
        background-color: #002b5c;
        color: white;
    }

    tr:hover {
        background-color: #eef4ff;
    }

    .btn {
        border-radius: 6px;
        padding: 6px 14px;
        font-size: 0.9rem;
        transition: all 0.25s ease;
    }

    .btn-primary {
        background-color: #002b5c;
        border: none;
    }

        .btn-primary:hover {
            background-color: #0056b3;
            transform: translateY(-2px);
        }

    .btn-success {
        background-color: #28a745;
        border: none;
    }

        .btn-success:hover {
            background-color: #218838;
            transform: translateY(-2px);
        }

    .badge {
        padding: 6px 12px;
        border-radius: 6px;
        font-size: 0.85rem;
    }

    .container-fluid {
        animation: fadeIn 0.4s ease;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(15px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
</style>
<div class="container-fluid py-4">
    <h2><i class="bi bi-speedometer2"></i> Dashboard Thủ Thư</h2>

    <!-- Thống kê -->
    <div class="row mb-4">
        <div class="col-md-3 mb-3">
            <div class="stat-card bg-warning-custom">
                <h5><i class="bi bi-hourglass-split"></i> Chờ duyệt</h5>
                <h2>@Model.PendingApprovalsCount</h2>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="stat-card bg-info-custom">
                <h5><i class="bi bi-book"></i> Đang mượn</h5>
                <h2>@Model.CurrentBorrowsCount</h2>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="stat-card bg-danger-custom">
                <h5><i class="bi bi-exclamation-triangle"></i> Quá hạn</h5>
                <h2>@Model.OverdueBooksCount</h2>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="stat-card bg-success-custom">
                <h5><i class="bi bi-cash-coin"></i> Tiền phạt chưa thu</h5>
                <h2>@Model.TotalUnpaidFines.ToString("N0")₫</h2>
            </div>
        </div>
    </div>

    <!-- Yêu cầu chờ duyệt -->
    @if (Model.PendingBorrows.Any())
    {
        <div class="card mb-4 border-warning">
            <div class="card-header bg-warning text-dark">
                <i class="bi bi-clock-history"></i> Yêu cầu chờ duyệt
            </div>
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead>
                        <tr>
                            <th>Sinh viên</th>
                            <th>Sách</th>
                            <th>Ngày yêu cầu</th>
                            <th>Hạn trả dự kiến</th>
                            <th>Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var borrow in Model.PendingBorrows)
                        {
                            <tr>
                                <td><i class="bi bi-person-circle table-icon"></i>@borrow.Student?.Fullname</td>
                                <td>@borrow.Book?.Title</td>
                                <td>@borrow.BorrowDate?.ToString("dd/MM/yyyy")</td>
                                <td>@borrow.DueDate?.ToString("dd/MM/yyyy")</td>
                                <td>
                                    <a href="@Url.Action("ApproveBorrow", new { id = borrow.BorrowId })"
                                       class="btn btn-sm btn-primary"><i class="bi bi-check-circle"></i> Xử lý</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }

    <!-- Sắp đến hạn -->
    @if (Model.DueSoonBorrows.Any())
    {
        <div class="card mb-4 border-info">
            <div class="card-header bg-info text-white">
                <i class="bi bi-alarm"></i> Sắp đến hạn (3 ngày)
            </div>
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead>
                        <tr>
                            <th>Sinh viên</th>
                            <th>Sách</th>
                            <th>Ngày mượn</th>
                            <th>Hạn trả</th>
                            <th>Còn lại</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var borrow in Model.DueSoonBorrows)
                        {
                            var daysLeft = borrow.DueDate.HasValue
                            ? (borrow.DueDate.Value.DayNumber - DateOnly.FromDateTime(DateTime.Now).DayNumber)
                            : 0;

                            <tr>
                                <td><i class="bi bi-person table-icon"></i>@borrow.Student?.Fullname</td>
                                <td>@borrow.Book?.Title</td>
                                <td>@borrow.BorrowDate?.ToString("dd/MM/yyyy")</td>
                                <td>@borrow.DueDate?.ToString("dd/MM/yyyy")</td>
                                <td><span class="badge bg-warning text-dark">@daysLeft ngày</span></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }

    <!-- Quá hạn -->
    @if (Model.OverdueBorrows.Any())
    {
        <div class="card mb-4 border-danger">
            <div class="card-header bg-danger text-white">
                <i class="bi bi-exclamation-octagon"></i> Sách quá hạn
            </div>
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead>
                        <tr>
                            <th>Sinh viên</th>
                            <th>Sách</th>
                            <th>Ngày mượn</th>
                            <th>Hạn trả</th>
                            <th>Quá hạn</th>
                            <th>Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var borrow in Model.OverdueBorrows)
                        {
                            var daysOverdue = borrow.DueDate.HasValue
                            ? (DateOnly.FromDateTime(DateTime.Now).DayNumber - borrow.DueDate.Value.DayNumber)
                            : 0;

                            <tr>
                                <td><i class="bi bi-person-x table-icon"></i>@borrow.Student?.Fullname</td>
                                <td>@borrow.Book?.Title</td>
                                <td>@borrow.BorrowDate?.ToString("dd/MM/yyyy")</td>
                                <td>@borrow.DueDate?.ToString("dd/MM/yyyy")</td>
                                <td><span class="badge bg-danger">@daysOverdue ngày</span></td>
                                <td>
                                    <a href="@Url.Action("ProcessReturn", new { id = borrow.BorrowId })"
                                       class="btn btn-sm btn-success"><i class="bi bi-box-arrow-in-down"></i> Trả sách</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }

    <!-- Liên kết nhanh -->
    <div class="text-center mt-4">
        <a asp-action="BorrowHistory" class="btn btn-primary me-2">
            <i class="bi bi-journal-text"></i> Lịch sử mượn/trả
        </a>
        <a asp-action="SearchStudent" class="btn btn-primary me-2">
            <i class="bi bi-search"></i> Tìm kiếm sinh viên
        </a>
        <a asp-action="Index" class="btn btn-secondary">
            <i class="bi bi-people"></i> Quản lý thủ thư
        </a>
    </div>
</div>
